November 22, 2005
=================

* text.scm macros.scm
  added (locals ...) form, another of Alex's suggestions

* certain instances of iter were not following the semantics precisely. fixed.

November 18, 2005
=================

* emacs derived mode on top of scheme.el -> sassy.el

* Added Alex Shinn's suggestions
 * parse.scm, text.scm, macros.scm, intern.scm
   label declarations are now (label name body). The macro expander
   does not touch the name if it's a symbol. updated docs.

 * text.scm, text-block.scm, parse.scm
   label forms can appear anyplace in a text or data section.

November 15, 2005
=================

* parse.scm and some of the inits
  Found a better power-of-two? than using logcount
  (zero? (logand x (- x 1)))

November 14, 2005
=================

* macro.scm
  The macro expander wasn't always expanding the heads of lists. Fixed.
  (thanks to Alex Shinn for pointing this out)

November 13, 2005
=================

* elf.scm - anonymous 'abs relocations (those with a number target,
  not a symbol) were always pointing to the text-section, even if they
  were supposed to be data pointers stored in the data section. since
  jump tables would be made with actual labels to the text section,
  changed the behavior so that anonymous 'abs relocations always point
  to the section in which the relocation is occurring. this as well
  preserves, for instance (push $win), since the $win is in the text
  section.

November 11, 2005
=================

* The docs say with-win and the other explicit continuations accept
  integer arguments. This was wrong (the parser wasn't recognizing
  that). Instead...

* text.scm opcodes.scm
  You can now specify a any text item as an explicit
  continuation, or a label/reloc, but not an integer, so to specify a
  numerical address as a continuation, wou write:

  (with-win (jmp 10000)
            (seq (pop eax)
                 (= eax 3) etc.))

  Updated docs too.

=================
November 10, 2005
Release: sassy-0.1.1 - Install bugs and I/O

* Fixed up elf.scm so all implementations now create the exact same
  elf-object given the same source. Previously each implementation
  created valid elf-objects, but with entries in different orders in the
  tables.

* Converted all i/o to use srfi-56 (withdrawn) read-byte write-byte,
  added these routines to various init files.

* mzscheme209 no longer supported. supporting mzscheme299 since it has
  read-byte write-byte

* Changed load paths for "other" in mzscheme/csi inits

* Providing .zip archive for "those other guys" ;)

* Updated docs/site.

================
November 9, 2005
Initial Release: sassy-0.1
