
(define-library (chibi table-test)
  (import (scheme base)
          (scheme write)
          (srfi 231)
          (chibi csv)
          (chibi math linalg)
          (chibi table)
          (chibi test))
  (cond-expand
   (chibi
    (import (only (chibi) find-module-file)))
   (else
    (begin
      (define (find-module-file path)
        path))))
  (export run-tests)
  (begin
    (define (run-tests)
      (test-begin "(chibi table)")
      (let ((passengers
             (table '#(#("Braund, Mr. Owen Harris" male 22 7.25)
                       #("Cumings, Mrs. John Bradley" female 38 71.28)
                       #("Heikkinen, Miss. Laina" female 26 7.925)
                       #("Futrelle, Mrs. Jacques Heath" female 35 53.1)
                       #("Allen, Mr. William Henry" male 35 8.05))
                    '#(Name Sex Age Fare))))
        (test 5 (table-num-rows passengers))
        (test 4 (table-num-columns passengers))
        (test '(5 4) (table-shape passengers))
        (test "Heikkinen, Miss. Laina" (table-ref passengers 2 0))
        (test 38 (table-ref passengers 1 2))
        (test 7.25 (table-ref passengers 0 3))
        (test "Heikkinen, Miss. Laina" (table-ref passengers 2 'Name))
        (test 38 (table-ref passengers 1 'Age))
        (test 7.25 (table-ref passengers 0 'Fare))
        )
      (let ((passengers
             (table '#(#("Braund, Mr. Owen Harris" male 22 7.25)
                       #("Cumings, Mrs. John Bradley" female 38 71.28)
                       #("Heikkinen, Miss. Laina" female 26 7.925)
                       #("Futrelle, Mrs. Jacques Heath" female 35 53.1)
                       #("Allen, Mr. William Henry" male 35 8.05))
                    '#(Name Sex Age Fare)
                    (vector generic-storage-class
                            generic-storage-class
                            u8-storage-class
                            f32-storage-class))))
        (test 3 (vector-length (table-arrays passengers)))
        (test 5 (table-num-rows passengers))
        (test 4 (table-num-columns passengers))
        (test '(5 4) (table-shape passengers))
        (test "Heikkinen, Miss. Laina" (table-ref passengers 2 0))
        (test 38 (table-ref passengers 1 2))
        (test 7.25 (table-ref passengers 0 3))
        (test "Heikkinen, Miss. Laina" (table-ref passengers 2 'Name))
        (test 38 (table-ref passengers 1 'Age))
        (test 7.25 (table-ref passengers 0 'Fare))
        (test-error (table-column-set! passengers 'Age '(0 1 2)))
        (table-column-set! passengers 'Age '(0 1 2 3 4))
        (test 3 (table-ref passengers 3 'Age))
        (let ((round-fares
               (array-map round (array-squeeze (table-column passengers 'Fare)))))
          (table-column-adjoin! passengers 'RoundFare round-fares))
        (test 7. (table-ref passengers 0 'RoundFare))
        (test 53. (table-ref passengers 3 'RoundFare))
        (table-column-drop! passengers 'Age)
        (test '#(Name Sex Fare RoundFare) (table-labels passengers))
        (test-error (table-ref passengers 0 'Age))
        (table-column-define! passengers 'Human #t)
        (test "Heikkinen, Miss. Laina" (table-ref passengers 2 'Name))
        (test 7. (table-ref passengers 0 'RoundFare))
        (test #t (table-ref passengers 1 'Human))
        ;; We adjoined two more columns after the initial 3.
        (test 5 (vector-length (table-arrays passengers)))
        (table-consolidate! passengers)
        ;; In addition to merged the new columns, we removed the only
        ;; u8 column, shrinking the table down to two types.
        (test 2 (vector-length (table-arrays passengers)))
        (test "Heikkinen, Miss. Laina" (table-ref passengers 2 'Name))
        (test 'female (table-ref passengers 1 'Sex))
        (test 7.25 (table-ref passengers 0 'Fare))
        (test 7.0 (table-ref passengers 0 'RoundFare))
        )
      (test (csv-grammar '((separator-chars #\,)))
          (infer-csv-grammar (open-input-string "")))
      (let ((passengers
             (table-load-csv (find-module-file "chibi/table/data/example.csv")
                             'header-from-first-line?: #t)))
        (test "Heikkinen, Miss. Laina" (table-ref passengers 2 'Name))
        (test 26.0 (table-ref passengers 2 'Age))
        (test 1.0 (table-ref passengers 2 'Survived))
        (test f32-storage-class (table-column-storage passengers 'PassengerId))
        (test f32-storage-class (table-column-storage passengers 'Survived))
        (test f32-storage-class (table-column-storage passengers 'Pclass))
        (test generic-storage-class (table-column-storage passengers 'Name))
        (test generic-storage-class (table-column-storage passengers 'Sex))
        (test f32-storage-class (table-column-storage passengers 'Age))
        (test f32-storage-class (table-column-storage passengers 'SibSp))
        (test f32-storage-class (table-column-storage passengers 'Parch))
        (test generic-storage-class (table-column-storage passengers 'Ticket))
        (test f32-storage-class (table-column-storage passengers 'Fare))
        (test generic-storage-class (table-column-storage passengers 'Cabin))
        (test generic-storage-class (table-column-storage passengers 'Embarked))
        )
      (test-end))))
